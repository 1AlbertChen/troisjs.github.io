import{a0 as t,al as e,m as s,bj as a,X as i}from"./OrbitControls.42fcbb91.js";import{a as r,D as o,E as n,F as m,I as d,c as l,d as c,g as h,n as u,S as p,U as f}from"./trois.module.99ddcb6e.js";import{x as y,r as S,o as C,c as g,w as b,b as M}from"./app.80aaf375.js";const{randFloat:N,randFloatSpread:A}=i,x={components:{Camera:r,DodecahedronGeometry:o,EffectComposer:n,FXAAPass:m,InstancedMesh:d,PointLight:l,Renderer:c,RenderPass:h,SubSurfaceMaterial:u,Scene:p,UnrealBloomPass:f},setup(){const s=[],a=y.scale(["#dd3e1b","#0b509c"]),i=new e,r=new t,o=new e;for(let t=0;t<2e3;t++)s.push({position:new e(A(200),A(200),A(200)),scale:N(.2,1),velocity:new e(A(2),A(2),A(2)),attraction:.0025+N(0,.01),vlimit:.3+N(0,.2)});return{NUM_INSTANCES:2e3,instances:s,cscale:a,target:i,dummyO:r,dummyV:o}},mounted(){this.renderer=this.$refs.renderer,this.imesh=this.$refs.imesh.mesh,this.light=this.$refs.light.light,this.init()},methods:{init(){for(let t=0;t<this.NUM_INSTANCES;t++){const{position:e,scale:s}=this.instances[t];this.dummyO.position.copy(e),this.dummyO.scale.set(s,s,s),this.dummyO.updateMatrix(),this.imesh.setMatrixAt(t,this.dummyO.matrix)}this.updateColors(),this.imesh.instanceMatrix.needsUpdate=!0,this.renderer.onBeforeRender(this.animate)},animate(){const{pointer:t}=this.renderer.three;this.target.copy(t.positionV3),this.light.position.copy(this.target);for(let e=0;e<this.NUM_INSTANCES;e++){const{position:t,scale:s,velocity:a,attraction:i,vlimit:r}=this.instances[e];this.dummyV.copy(this.target).sub(t).normalize().multiplyScalar(i),a.add(this.dummyV).clampScalar(-r,r),t.add(a),this.dummyO.position.copy(t),this.dummyO.scale.set(s,s,s),this.dummyO.lookAt(this.dummyV.copy(t).add(a)),this.dummyO.updateMatrix(),this.imesh.setMatrixAt(e,this.dummyO.matrix)}this.imesh.instanceMatrix.needsUpdate=!0},randomColors(){const t=y.random(),e=y.random();this.cscale=y.scale([t,e]),this.updateColors()},updateColors(){const t=[];for(let e=0;e<this.NUM_INSTANCES;e++){const e=new s(this.cscale(N(0,1)).hex());t.push(e.r,e.g,e.b)}this.imesh.geometry.setAttribute("color",new a(new Float32Array(t),3))}}};x.render=function(t,e,s,a,i,r){const o=S("Camera"),n=S("PointLight"),m=S("DodecahedronGeometry"),d=S("SubSurfaceMaterial"),l=S("InstancedMesh"),c=S("Scene"),h=S("RenderPass"),u=S("UnrealBloomPass"),p=S("FXAAPass"),f=S("EffectComposer"),y=S("Renderer");return C(),g(y,{ref:"renderer",resize:"","orbit-ctrl":{enableDamping:!0,dampingFactor:.05},pointer:"",onClick:r.randomColors},{default:b((()=>[M(o,{position:{z:200}}),M(c,null,{default:b((()=>[M(n,{ref:"light",color:"#FFC0C0"},null,512),M(l,{ref:"imesh",count:a.NUM_INSTANCES},{default:b((()=>[M(m,{radius:5}),M(d,{"vertex-colors":""})])),_:1},8,["count"])])),_:1}),M(f,null,{default:b((()=>[M(h),M(u,{strength:.5},null,8,["strength"]),M(p)])),_:1})])),_:1},8,["orbit-ctrl","onClick"])};export default x;
