import{o as a,c as n,d as s}from"./app.c4cbb42c.js";const t='{"title":"Models","description":"","frontmatter":{},"headers":[{"level":2,"title":"Props","slug":"props"},{"level":2,"title":"Events","slug":"events"},{"level":2,"title":"Notes/FAQs","slug":"notes-faqs"}],"relativePath":"guide/models/index.md","lastUpdated":1637091612824}',e={},o=s('<h1 id="models"><a class="header-anchor" href="#models" aria-hidden="true">#</a> Models</h1><p>TroisJS contains loaders for <code>.gltf</code>/<code>.glb</code> and <code>.fbx</code> files.</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>GltfModel</span>\n    <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/path/to/your/model.gltf<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">@load</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onReady<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">@progress</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onProgress<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">@error</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onError<span class="token punctuation">&quot;</span></span>\n<span class="token punctuation">/&gt;</span></span>\n\n<span class="token comment">&lt;!-- FBX Model has the same props and events but loads FBX files --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FbxModel</span>\n    <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/path/to/your/model.fbx<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">@load</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onReady<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">@progress</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onProgress<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">@error</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onError<span class="token punctuation">&quot;</span></span>\n<span class="token punctuation">/&gt;</span></span>\n</code></pre></div><h2 id="props"><a class="header-anchor" href="#props" aria-hidden="true">#</a> Props</h2><table><thead><tr><th>Name</th><th>Type</th><th>Notes</th></tr></thead><tbody><tr><td><code>src</code></td><td>String</td><td>Path to <code>.gltf</code>, <code>.glb</code>, or <code>.fbx</code> file</td></tr></tbody></table><h2 id="events"><a class="header-anchor" href="#events" aria-hidden="true">#</a> Events</h2><table><thead><tr><th>Event</th><th>Parameters</th><th>Notes</th></tr></thead><tbody><tr><td><code>error</code></td><td><code>error: ErrorEvent</code></td><td>On load error</td></tr><tr><td><code>load</code></td><td><code>model: Object3D</code></td><td>On load complete</td></tr><tr><td><code>progress</code></td><td><code>progress: ProgressEvent</code></td><td>On load progress</td></tr></tbody></table><h2 id="notes-faqs"><a class="header-anchor" href="#notes-faqs" aria-hidden="true">#</a> Notes/FAQs</h2><details><summary>Why aren&#39;t ambient lights affecting the model?</summary><p>Occasionally, models will have their materials&#39; metalness set to 0 and look unaffected by AmbientLights. To fix (see <a href="https://discourse.threejs.org/t/ambient-light-and-gltf-models-not-working-results-in-black-model/7428/5" target="_blank" rel="noopener noreferrer">here</a> for explanation):</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!-- ... --&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>GltfModel</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>...<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@load</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onReady<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n    <span class="token comment">&lt;!-- ... --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    methods<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token function">onReady</span><span class="token punctuation">(</span><span class="token parameter">model</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            model<span class="token punctuation">.</span><span class="token function">traverse</span><span class="token punctuation">(</span><span class="token parameter">o</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span>isMesh<span class="token punctuation">)</span><span class="token punctuation">{</span>\n                    <span class="token comment">// handle both multiple and single materials</span>\n                    <span class="token keyword">const</span> asArray <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>material<span class="token punctuation">)</span> <span class="token operator">?</span> o<span class="token punctuation">.</span>material <span class="token operator">:</span> <span class="token punctuation">[</span>o<span class="token punctuation">.</span>material<span class="token punctuation">]</span>\n                    <span class="token comment">// 0 works for matte materials - change as needed</span>\n                    asArray<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">mat</span> <span class="token operator">=&gt;</span> mat<span class="token punctuation">.</span>metalness <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div></details>',9);e.render=function(s,t,e,p,c,l){return a(),n("div",null,[o])};export default e;export{t as __pageData};
