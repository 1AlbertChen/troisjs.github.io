import{o as t,c as e,d as a}from"./app.0c11a873.js";const r='{"title":"Materials (wip)","description":"","frontmatter":{},"headers":[{"level":3,"title":"Props","slug":"props"},{"level":3,"title":"Access ThreeJS material","slug":"access-threejs-material"}],"relativePath":"guide/materials/index.md","lastUpdated":1615239073961}',s={},n=a('<h1 id="materials-wip"><a class="header-anchor" href="#materials-wip" aria-hidden="true">#</a> Materials (wip)</h1><p>You can easily create the following materials :</p><ul><li><code>BasicMaterial</code> (<a href="https://github.com/troisjs/trois/blob/master/src/materials/BasicMaterial.js" target="_blank" rel="noopener noreferrer">source</a>, <a href="https://threejs.org/docs/index.html#api/en/materials/MeshBasicMaterial" target="_blank" rel="noopener noreferrer">threejs doc</a>)</li><li><code>LambertMaterial</code> (<a href="https://github.com/troisjs/trois/blob/master/src/materials/LambertMaterial.js" target="_blank" rel="noopener noreferrer">source</a>, <a href="https://threejs.org/docs/index.html#api/en/materials/MeshLambertMaterial" target="_blank" rel="noopener noreferrer">threejs doc</a>)</li><li><code>MatcapMaterial</code> (<a href="https://github.com/troisjs/trois/blob/master/src/materials/MatcapMaterial.js" target="_blank" rel="noopener noreferrer">source</a>, <a href="https://threejs.org/docs/index.html#api/en/materials/MeshMatcapMaterial" target="_blank" rel="noopener noreferrer">threejs doc</a>)</li><li><code>PhongMaterial</code> (<a href="https://github.com/troisjs/trois/blob/master/src/materials/PhongMaterial.js" target="_blank" rel="noopener noreferrer">source</a>, <a href="https://threejs.org/docs/index.html#api/en/materials/MeshPhongMaterial" target="_blank" rel="noopener noreferrer">threejs doc</a>)</li><li><code>PhysicalMaterial</code> (<a href="https://github.com/troisjs/trois/blob/master/src/materials/PhysicalMaterial.js" target="_blank" rel="noopener noreferrer">source</a>, <a href="https://threejs.org/docs/index.html#api/en/materials/MeshPhysicalMaterial" target="_blank" rel="noopener noreferrer">threejs doc</a>)</li><li><code>StandardMaterial</code> (<a href="https://github.com/troisjs/trois/blob/master/src/materials/StandardMaterial.js" target="_blank" rel="noopener noreferrer">source</a>, <a href="https://threejs.org/docs/index.html#api/en/materials/MeshStandardMaterial" target="_blank" rel="noopener noreferrer">threejs doc</a>)</li><li><code>ToonMaterial</code> (<a href="https://github.com/troisjs/trois/blob/master/src/materials/ToonMaterial.js" target="_blank" rel="noopener noreferrer">source</a>, <a href="https://threejs.org/docs/index.html#api/en/materials/MeshToonMaterial" target="_blank" rel="noopener noreferrer">threejs doc</a>)</li></ul><p>Example :</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Box</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PhongMaterial</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#ffffff<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Box</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h3 id="props"><a class="header-anchor" href="#props" aria-hidden="true">#</a> Props</h3><table><tbody><tr><th>Name</th><th>Description</th><th>Type</th><th>Default</th></tr><tr><td><code>color</code></td><td>Color</td><td>String, Number</td><td>#ffffff</td></tr><tr><td><code>depthTest</code></td><td>Whether to have depth test enabled when rendering this material.</td><td>Boolean</td><td>true</td></tr><tr><td><code>depthWrite</code></td><td>Whether rendering this material has any effect on the depth buffer.</td><td>Boolean</td><td>true</td></tr><tr><td><code>flatShading</code></td><td>Define whether the material is rendered with flat shading.</td><td>Boolean</td><td>false</td></tr><tr><td><code>fog</code></td><td>Whether the material is affected by fog.</td><td>Boolean</td><td>true</td></tr>\x3c!-- &lt;tr&gt;&lt;td&gt;&lt;code&gt;id&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Material ID&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;/tr&gt; --\x3e<tr><td><code>opacity</code></td><td>Float in the range of 0.0 - 1.0 indicating how transparent the material is.</td><td>Number</td><td>1</td></tr><tr><td><code>side</code></td><td>Defines which side of faces will be rendered - front, back or both.</td><td>Number</td><td>THREE.FrontSide</td></tr><tr><td><code>transparent</code></td><td>Defines whether this material is transparent.</td><td>Boolean</td><td>false</td></tr><tr><td><code>vertexColors</code></td><td>Defines whether vertex coloring is used.</td><td>Boolean</td><td>false</td></tr></tbody></table><h3 id="access-threejs-material"><a class="header-anchor" href="#access-threejs-material" aria-hidden="true">#</a> Access ThreeJS material</h3><p>You should set a <em>ref</em> on your material :</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PhongMaterial</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>material<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n</code></pre></div><p>You can then access ThreeJS material in your component script :</p><div class="language-js"><pre><code><span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$ref<span class="token punctuation">.</span>material<span class="token punctuation">.</span>material<span class="token punctuation">;</span>\n</code></pre></div>',12);s.render=function(a,r,s,o,l,i){return t(),e("div",null,[n])};export default s;export{r as __pageData};
