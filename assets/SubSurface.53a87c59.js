import{f as t,a1 as e,E as s,F as a,m as i,h as r,i as o,o as n,a2 as m,j as h,U as l,p as d,q as c,a3 as u,v as p,r as y}from"./trois.module.4a1ab1a7.js";import{z as f,r as C,o as S,c as g,w as M,b as N}from"./app.28651c2b.js";const{randFloat:A,randFloatSpread:b}=y,x={components:{Camera:t,DodecahedronGeometry:e,EffectComposer:s,FXAAPass:a,InstancedMesh:i,PointLight:r,Renderer:o,RenderPass:n,SubSurfaceMaterial:m,Scene:h,UnrealBloomPass:l},setup(){const t=[],e=f.scale(["#dd3e1b","#0b509c"]),s=new c,a=new d,i=new c;for(let r=0;r<2e3;r++)t.push({position:new c(b(200),b(200),b(200)),scale:A(.2,1),velocity:new c(b(2),b(2),b(2)),attraction:.0025+A(0,.01),vlimit:.3+A(0,.2)});return{NUM_INSTANCES:2e3,instances:t,cscale:e,target:s,dummyO:a,dummyV:i}},mounted(){this.renderer=this.$refs.renderer,this.imesh=this.$refs.imesh.mesh,this.light=this.$refs.light.light,this.init()},methods:{init(){for(let t=0;t<this.NUM_INSTANCES;t++){const{position:e,scale:s}=this.instances[t];this.dummyO.position.copy(e),this.dummyO.scale.set(s,s,s),this.dummyO.updateMatrix(),this.imesh.setMatrixAt(t,this.dummyO.matrix)}this.updateColors(),this.imesh.instanceMatrix.needsUpdate=!0,this.renderer.onBeforeRender(this.animate)},animate(){const{pointer:t}=this.renderer.three;this.target.copy(t.positionV3),this.light.position.copy(this.target);for(let e=0;e<this.NUM_INSTANCES;e++){const{position:t,scale:s,velocity:a,attraction:i,vlimit:r}=this.instances[e];this.dummyV.copy(this.target).sub(t).normalize().multiplyScalar(i),a.add(this.dummyV).clampScalar(-r,r),t.add(a),this.dummyO.position.copy(t),this.dummyO.scale.set(s,s,s),this.dummyO.lookAt(this.dummyV.copy(t).add(a)),this.dummyO.updateMatrix(),this.imesh.setMatrixAt(e,this.dummyO.matrix)}this.imesh.instanceMatrix.needsUpdate=!0},randomColors(){const t=f.random(),e=f.random();this.cscale=f.scale([t,e]),this.updateColors()},updateColors(){const t=[];for(let e=0;e<this.NUM_INSTANCES;e++){const e=new u(this.cscale(A(0,1)).hex());t.push(e.r,e.g,e.b)}this.imesh.geometry.setAttribute("color",new p(new Float32Array(t),3))}}};x.render=function(t,e,s,a,i,r){const o=C("Camera"),n=C("PointLight"),m=C("DodecahedronGeometry"),h=C("SubSurfaceMaterial"),l=C("InstancedMesh"),d=C("Scene"),c=C("RenderPass"),u=C("UnrealBloomPass"),p=C("FXAAPass"),y=C("EffectComposer"),f=C("Renderer");return S(),g(f,{ref:"renderer",resize:"","orbit-ctrl":{enableDamping:!0,dampingFactor:.05},pointer:"",onClick:r.randomColors},{default:M((()=>[N(o,{position:{z:200}}),N(d,null,{default:M((()=>[N(n,{ref:"light",color:"#FFC0C0"},null,512),N(l,{ref:"imesh",count:a.NUM_INSTANCES},{default:M((()=>[N(m,{radius:5}),N(h,{props:{vertexColors:!0}})])),_:1},8,["count"])])),_:1}),N(y,null,{default:M((()=>[N(c),N(u,{strength:.5},null,8,["strength"]),N(p)])),_:1})])),_:1},8,["orbit-ctrl","onClick"])};export default x;
